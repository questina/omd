import random
from enum import Enum


class RainForce(Enum):
    SMALL_RAIN = 1
    MEDIUM_RAIN = 2
    LARGE_RAIN = 3


def step2_umbrella():
    """
    This function prints the end of the story
    if the duck would not take umbrella
    :return: None
    """
    print(
        '–£—Ç–∫–∞ —Ä–µ—à–∏–ª–∞ –≤–∑—è—Ç—å –∑–æ–Ω—Ç\n'
        '–•–æ—Ç—å –æ–Ω –µ–π –∏ –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏–ª—Å—è, –Ω–æ '
        '–æ–∫–∞–∑–∞–ª–æ—Å—å —á—Ç–æ –≤ –±–∞—Ä–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –∞–∫—Ü–∏—è, '
        '–≤ –∫–æ—Ç–æ—Ä–æ–π –≥–æ–≤–æ—Ä–∏—Ç—Å—è, —á—Ç–æ –µ—Å–ª–∏ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –∑–æ–Ω—Ç '
        '–≤ –±–∞—Ä, —Ç–æ —Ç–µ–±–µ –ø–æ–¥–∞—Ä—è—Ç —Ñ–∏—Ä–º–µ–Ω–Ω—É—é –∫—Ä—É–∂–∫—É.\n'
        '–£—Ç–æ—á–∫–∞ –±—ã–ª–∞ —Ä–∞–¥–∞ —Å–ª—É—á–∞–π–Ω–æ–º—É –ø–æ–¥–∞—Ä–∫—É –∏ –µ–µ –¥–µ–Ω—å '
        '–ø—Ä–æ—à–µ–ª –∏–¥–µ–∞–ª—å–Ω–æ!'
    )


def step2_no_umbrella():
    """
    This function computes the force of the rain
    and based on it continues the story of the duck
    if it would take umbrella
    :return: None
    """
    rain_force = random.choice(list(RainForce))
    if rain_force == RainForce.SMALL_RAIN:
        print(
            '–£—Ç–æ—á–∫–∞ —Ä–µ—à–∏–ª–∞ –Ω–µ –±—Ä–∞—Ç—å –∑–æ–Ω—Ç, '
            '–∏ –µ–π –ø–æ–≤–µ–∑–ª–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞ —É–ª–∏—Ü–µ '
            '—à–µ–ª —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–π –¥–æ–∂–¥—å, '
            '–∫–æ—Ç–æ—Ä—ã–π –Ω–∏–∫–∞–∫ –Ω–µ –ø–æ–º–µ—à–∞–ª –µ–π '
            '–Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è —ç—Ç–∏–º –≤–µ—á–µ—Ä–æ–º!'
        )
    elif rain_force == RainForce.MEDIUM_RAIN:
        print(
            '–£—Ç–æ—á–∫–∞ —Ä–µ—à–∏–ª–∞ –Ω–µ –±—Ä–∞—Ç—å –∑–æ–Ω—Ç, '
            '–Ω–æ –∫–æ–≥–¥–∞ –æ–Ω–∞ –≤—ã—à–ª–∞ –∏–∑ –¥–æ–º–∞, '
            '—Ç–æ –ø–æ–Ω—è–ª–∞, —á—Ç–æ –Ω–∞ —É–ª–∏—Ü–µ –∏–¥–µ—Ç –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å.\n'
            '"–ù—É –∏ –ª–∞–¥–Ω–æ", –ø–æ–¥—É–º–∞–ª–∞ —É—Ç–æ—á–∫–∞, –¥–æ–∂–¥—å –∂–µ –Ω–µ–±–æ–ª—å—à–æ–π, '
            '—è –≤—Å–µ —Ä–∞–≤–Ω–æ —Å–º–æ–≥—É –¥–æ–π—Ç–∏ –¥–æ –±–∞—Ä–∞.\n'
            '–¢–∞–∫–∏–µ –º—ã—Å–ª–∏ —Å–æ–≥—Ä–µ–≤–∞–ª–∏ —É—Ç–æ—á–∫—É –∏ '
            '–æ–Ω–∞ –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –¥–æ–±—Ä–∞–ª–∞—Å—å –¥–æ –±–∞—Ä–∞, '
            '–≥–¥–µ –Ω–∞—Å–ª–∞–¥–∏–ª–∞—Å—å —ç—Ç–∏–º –≤–µ—á–µ—Ä–æ–º.'
        )
    else:
        print(
            '–£—Ç–æ—á–∫–∞ —Ä–µ—à–∏–ª–∞ –Ω–µ –±—Ä–∞—Ç—å –∑–æ–Ω—Ç, '
            '–Ω–æ –Ω–∞ —É–ª–∏—Ü–µ –æ–∫–∞–∑–∞–ª—Å—è —É–∂–∞—Å–Ω—ã–π –ª–∏–≤–µ–Ω—å.\n'
            '–£—Ç–æ—á–∫–∞ –≤—Å–ø–æ–º–Ω–∏–ª–∞, —á—Ç–æ –æ–Ω–∞ –≤–æ–æ–±—â–µ-—Ç–æ –≤–æ–¥–æ–ø–ª–∞–≤–∞—é—â–µ–µ '
            '–∏ –≤–æ–¥–∞ –µ–π –Ω–µ —Å—Ç—Ä–∞—à–Ω–∞, –∏ —Å–ø–æ–∫–æ–π–Ω–æ –ø–æ—à–ª–∞ –≤ –¥–æ–∂–¥—å –¥–æ –±–∞—Ä–∞,\n'
            '—É—Å–ø–µ–≤–∞—è –ø—Ä–∏ —ç—Ç–æ–º –∫—É–ø–∞—Ç—å—Å—è –≤ –±–æ–ª—å—à–∏—Ö –ª—É–∂–∞—Ö –∏ —É–¥–∏–≤–ª—è—Ç—å –ø—Ä–æ—Ö–æ–∂–∏—Ö.\n'
            '–≠—Ç–æ—Ç –≤–µ—á–µ—Ä –∑–∞–ø–æ–º–Ω–∏–ª—Å—è –µ–π –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å!'
        )


def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()

    if options[option]:
        return step2_umbrella()
    return step2_no_umbrella()


if __name__ == '__main__':
    step1()
